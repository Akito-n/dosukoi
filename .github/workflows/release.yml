name: Release DOSUKOI

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"

permissions:
  contents: write

jobs:
  check_version:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    outputs:
      version_changed: ${{ steps.check.outputs.version_changed }}
      version: ${{ steps.check.outputs.version }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Get Previous Version
        id: prev_version
        run: |
          git fetch --tags
          PREV_VERSION=$(git tag --sort=-v:refname | head -n 1 | sed 's/v//')
          echo "PREV_VERSION=$PREV_VERSION" >> $GITHUB_ENV
          echo "Previous Version: $PREV_VERSION"

      - name: Get Current Version
        id: check
        run: |
          CURRENT_VERSION=$(grep '^version' Cargo.toml | head -n 1 | cut -d '"' -f2)
          echo "CURRENT_VERSION=${CURRENT_VERSION}" >> $GITHUB_ENV
          echo "CURRENT Version: $CURRENT_VERSION"

          if [ "$CURRENT_VERSION" != "$PREV_VERSION" ]; then
            echo "version_changed=true" >> $GITHUB_OUTPUT
            echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          else
            echo "version_changed=false" >> $GITHUB_OUTPUT
          fi

  create_tag:
    needs: check_version
    if: needs.check_version.outputs.version_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Create Git Tag
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git tag "v${{ needs.check_version.outputs.version }}"
          git push origin "v${{ needs.check_version.outputs.version }}"

  release:
    needs: [check_version, create_tag]
    if: (needs.check_version.outputs.version_changed == 'true' && github.ref == 'refs/heads/main') || startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Build Binary
        run: |
          cargo build --release
          zip -j dosukoi-mac.zip target/release/dosukoi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.check_version.outputs.version }}
          files: dosukoi-mac.zip
