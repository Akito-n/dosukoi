name: Release DOSUKOI

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"

permissions:
  contents: write

jobs:
  check_version:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    outputs:
      version_changed: ${{ steps.check.outputs.version_changed }}
      version: ${{ steps.check.outputs.version }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Get Previous Version
        id: prev_version
        run: |
          git fetch --tags
          echo "PREV_VERSION=$(git tag --sort=-v:refname | head -n 1 | sed 's/v//')" >> $GITHUB_ENV
          echo "Previous Version: $PREV_VERSION"

      - name: Get Current Version
        id: check
        run: |
          CURRENT_VERSION=$(grep '^version' Cargo.toml | head -n 1 | cut -d '"' -f2)
          echo "CURRENT_VERSION=${CURRENT_VERSION}" >> $GITHUB_ENV
          echo "CURRENT Version: $CURRENT_VERSION"
          echo "version=${CURRENT_VERSION}" >> $GITHUB_OUTPUT

          if [ "$CURRENT_VERSION" != "$PREV_VERSION" ]; then
            echo "version_changed=true" >> $GITHUB_OUTPUT
            echo "version=${CURRENT_VERSION}" >> $GITHUB_OUTPUT
          else
            echo "version_changed=false" >> $GITHUB_OUTPUT
          fi

  release:
    needs: check_version
    if: (needs.check_version.outputs.version_changed == 'true' && github.ref == 'refs/heads/main') || startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Build Binary
        run: |
          cargo build --release
          zip -j dosukoi-mac.zip target/release/dosukoi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.check_version.outputs.version }}
          files: dosukoi-mac.zip

  update_homebrew:
    needs: [release, check_version]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout homebrew-dosukoi repository
        uses: actions/checkout@v4
        with:
          repository: Akito-n/homebrew-dosukoi
          token: ${{ secrets.HOMEBREW_GITHUB_TOKEN }}
          path: homebrew-dosukoi

      - name: Get SHA256 of new release
        run: |
          VERSION=${{ needs.check_version.outputs.version }}
          SHA256=$(curl -Ls https://github.com/Akito-n/dosukoi/releases/download/v${VERSION}/dosukoi-mac.zip | shasum -a 256 | awk '{ print $1 }')

          echo "SHA256=$SHA256" >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Update Homebrew Formula
        run: |
          cat <<EOF > homebrew-dosukoi/dosukoi.rb
          class Dosukoi < Formula
            desc "A simple Docker container stopping tool"
            homepage "https://github.com/Akito-n/dosukoi"
            url "https://github.com/Akito-n/dosukoi/releases/download/v${VERSION}/dosukoi-mac.zip"
            sha256 "${SHA256}"
            version "${VERSION}"

            def install
              bin.install "dosukoi"
            end

            test do
              system "#{bin}/dosukoi", "--version"
            end
          end
          EOF

      - name: Commit and create pull request
        run: |
          cd homebrew-dosukoi
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          BRANCH_NAME="update-dosukoi-${VERSION}"

          git checkout -b $BRANCH_NAME
          git add dosukoi.rb
          git commit -m "Update dosukoi to v${VERSION}"
          git push origin $BRANCH_NAME

          gh pr create \
            --repo Akito-n/homebrew-dosukoi \
            --base main \
            --head $BRANCH_NAME \
            --title "Update dosukoi to v${VERSION}" \
            --body "This PR updates dosukoi to v${VERSION} automatically."

        env:
          GITHUB_TOKEN: ${{ secrets.HOMEBREW_GITHUB_TOKEN }}
